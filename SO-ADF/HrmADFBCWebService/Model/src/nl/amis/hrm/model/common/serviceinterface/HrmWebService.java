package nl.amis.hrm.model.common.serviceinterface;

import java.sql.Timestamp;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.soap.SOAPBinding;

import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import nl.amis.hrm.model.common.EmployeesViewSDO;

import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.common.service.types.ServiceViewInfo;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
import oracle.webservices.annotations.SDODatabinding;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Feb 14 10:28:37 CET 2015
// ---------------------------------------------------------------------
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.WRAPPED, style = SOAPBinding.Style.DOCUMENT)
@PortableWebService(targetNamespace = "nl.amis.hrm", name = "HrmWebService",
                    wsdlLocation = "nl/amis/hrm/model/common/serviceinterface/HrmWebService.wsdl")
@SDODatabinding(schemaLocation = "nl/amis/hrm/model/common/serviceinterface/HrmWebService.xsd")
public interface HrmWebService {
    public static final String NAME = "{nl.amis.hrm}HrmWebService";

    @WebMethod(action = "nl.amis.hrm/createEmployee", operationName = "createEmployee")
    @RequestWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "createEmployee")
    @ResponseWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "createEmployeeResponse")
    @WebResult(name = "result")
    EmployeesViewSDO createEmployee(@WebParam(mode = WebParam.Mode.IN, name = "employeesView1")
                                    EmployeesViewSDO employeesView1) throws ServiceException;

    @WebMethod(action = "nl.amis.hrm/updateEmployee", operationName = "updateEmployee")
    @RequestWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "updateEmployee")
    @ResponseWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "updateEmployeeResponse")
    @WebResult(name = "result")
    EmployeesViewSDO updateEmployee(@WebParam(mode = WebParam.Mode.IN, name = "employeesView1")
                                    EmployeesViewSDO employeesView1) throws ServiceException;

    @WebMethod(action = "nl.amis.hrm/deleteEmployee", operationName = "deleteEmployee")
    @RequestWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "deleteEmployee")
    @ResponseWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "deleteEmployeeResponse")
    void deleteEmployee(@WebParam(mode = WebParam.Mode.IN, name = "employeesView1")
                        EmployeesViewSDO employeesView1) throws ServiceException;

    @WebMethod(action = "nl.amis.hrm/findEmployees", operationName = "findEmployees")
    @RequestWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "findEmployees")
    @ResponseWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "findEmployeesResponse")
    @WebResult(name = "result")
    List<EmployeesViewSDO> findEmployees(@WebParam(mode = WebParam.Mode.IN, name = "findCriteria")
                                         FindCriteria findCriteria,
                                         @WebParam(mode = WebParam.Mode.IN, name = "findControl")
                                         FindControl findControl) throws ServiceException;

    @WebMethod(action = "nl.amis.hrm/getServiceLastUpdateTime", operationName = "getServiceLastUpdateTime")
    @RequestWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "getServiceLastUpdateTime")
    @ResponseWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "getServiceLastUpdateTimeResponse")
    @WebResult(name = "result")
    Timestamp getServiceLastUpdateTime() throws ServiceException;

    @WebMethod(action = "nl.amis.hrm/getEntityList", operationName = "getEntityList")
    @RequestWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "getEntityList")
    @ResponseWrapper(targetNamespace = "nl.amis.hrm/types/", localName = "getEntityListResponse")
    @WebResult(name = "result")
    List<ServiceViewInfo> getEntityList() throws ServiceException;
}

